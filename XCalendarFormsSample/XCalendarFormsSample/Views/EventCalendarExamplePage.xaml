<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="XCalendarFormsSample.Views.EventCalendarExamplePage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:xcConverters="clr-namespace:XCalendar.Forms.Converters;assembly=XCalendar.Forms"
    xmlns:xc="clr-namespace:XCalendar.Forms.Views;assembly=XCalendar.Forms"
    xmlns:Models="clr-namespace:XCalendarFormsSample.Models"
    xmlns:ViewModels="clr-namespace:XCalendarFormsSample.ViewModels"
    x:Name="This"
    Title="Event Calendar"
    x:DataType="{x:Type ViewModels:EventCalendarExampleViewModel}"
    Style="{StaticResource DefaultPageStyle}">

    <ContentPage.Resources>
        <!--  Limits a string to a certain amount of characters  -->
        <xcConverters:StringCharLimitConverter x:Key="StringCharLimitConverter"/>
        <!--  Returns true if all bindings evaluate to true  -->
        <xct:VariableMultiValueConverter x:Key="AllTrueConverter" ConditionType="All"/>
        <!--  Inverts a binded boolean value  -->
        <xct:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
    </ContentPage.Resources>

    <Grid
        ColumnSpacing="0"
        RowDefinitions="Auto,*"
        RowSpacing="0">

        <Frame
            Margin="10"
            Padding="10"
            BackgroundColor="{StaticResource ContentBackgroundColor}"
            CornerRadius="15">

            <xc:CalendarView
                x:Name="MainCalendarView"
                Style="{StaticResource DefaultCalendarViewStyle}"
                Grid.Row="0"
                DayNameTextColor="{StaticResource ContentTextColor}"
                NavigationArrowColor="{StaticResource ContentTextColor}"
                NavigationBackgroundColor="Transparent"
                NavigationTextColor="{StaticResource ContentTextColor}"
                Calendar="{Binding Calendar}">

                <xc:CalendarView.DayTemplate>
                    <DataTemplate x:DataType="{x:Type Models:EventDay}">
                        <!--  ContentView so that the margin is respected by the MonthView  -->
                        <ContentView>
                            <xc:CalendarDayView
                                Style="{StaticResource DefaultDayViewStyle}"
                                Margin="2.5"
                                HeightRequest="41"
                                Calendar="{Binding Calendar, Source={x:Reference MainCalendarView}}"
                                DateTime="{Binding DateTime}"
                                >

                                <!--
                                    Setting ControlTemplate instead of using a StackLayout with views inside because I don't require different parts of the view
                                    to have specific user interactions.
                                -->
                                <!--
                                    If I wanted to have a seperate tappable section that calls the same command when selecting a date,
                                    I would put the view in a layout in the parent ContenView and use CalendarView's 'ChangeDateSelectionCommand'.
                                -->
                                <xc:CalendarDayView.ControlTemplate>
                                    <ControlTemplate>
                                        <!--  Using a Grid to stack views on the z axis  -->
                                        <Grid RowSpacing="2" BindingContext="{Binding BindingContext, Source={RelativeSource TemplatedParent}}">

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1.5*"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <!--  ContentPresenter displays the default content for the control  -->
                                            <ContentPresenter
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                VerticalOptions="Center"/>
                                            
                                            <!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
                                            <StackLayout
                                                Grid.Row="1"
                                                HorizontalOptions="Center"
                                                Orientation="Horizontal"
                                                Spacing="2.5"
                                                BindableLayout.ItemsSource="{Binding Events}">

                                                <!--  I want the event indicators to only be visible when the DateTime is in the currently navigated month  -->
                                                <StackLayout.IsVisible>
                                                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                        <!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
                                                        <Binding Path="IsCurrentMonth" Source="{RelativeSource TemplatedParent}"/>
                                                        <Binding
                                                            Converter="{StaticResource InvertedBoolConverter}"
                                                            Path="IsInvalid"
                                                            Source="{RelativeSource TemplatedParent}"/>
                                                    </MultiBinding>
                                                </StackLayout.IsVisible>

                                                <BindableLayout.ItemTemplate>
                                                    <DataTemplate x:DataType="{x:Type Models:Event}">
                                                        <BoxView
                                                            CornerRadius="100"
                                                            HeightRequest="7"
                                                            HorizontalOptions="CenterAndExpand"
                                                            VerticalOptions="Center"
                                                            WidthRequest="7"
                                                            Color="{Binding Color}"/>
                                                    </DataTemplate>
                                                </BindableLayout.ItemTemplate>

                                            </StackLayout>

                                        </Grid>
                                    </ControlTemplate>
                                </xc:CalendarDayView.ControlTemplate>

                            </xc:CalendarDayView>
                        </ContentView>
                    </DataTemplate>
                </xc:CalendarView.DayTemplate>

            </xc:CalendarView>

        </Frame>

        <CollectionView Grid.Row="1" ItemsSource="{Binding SelectedEvents}">

            <CollectionView.EmptyView>
                <Label
                    FontAttributes="Bold"
                    FontSize="20"
                    HorizontalTextAlignment="Center"
                    Text="No Events"
                    TextColor="{StaticResource ContentTextColor}"
                    VerticalTextAlignment="Center"/>
            </CollectionView.EmptyView>
            <CollectionView.ItemsLayout>
                <LinearItemsLayout ItemSpacing="0" Orientation="Vertical"/>
            </CollectionView.ItemsLayout>

            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="{x:Type Models:Event}">
                    <ContentView Padding="5">
                        <Frame
                            Padding="0"
                            BackgroundColor="{StaticResource ContentBackgroundColor}"
                            CornerRadius="10">
                            <StackLayout Orientation="Horizontal" Spacing="0">
                                <BoxView BackgroundColor="{Binding Color}" WidthRequest="20"/>

                                <StackLayout Padding="10" Spacing="0">
                                    <Label
                                        FontAttributes="Bold"
                                        FontSize="20"
                                        Text="{Binding DateTime, StringFormat='{0: dd MMMM HH:mm}'}"
                                        TextColor="{StaticResource ContentTextColor}"
                                        VerticalTextAlignment="Center"/>
                                    <Label
                                        FontSize="16"
                                        Text="{Binding Title}"
                                        TextColor="{StaticResource ContentTextColor}"
                                        Margin="5,0,0,0"/>
                                    <Label
                                        Margin="5,10,0,0"
                                        FontSize="14"
                                        Text="{Binding Description}"
                                        TextColor="{StaticResource ContentTextColor}"/>
                                </StackLayout>
                            </StackLayout>
                        </Frame>
                    </ContentView>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

    </Grid>

</ContentPage>